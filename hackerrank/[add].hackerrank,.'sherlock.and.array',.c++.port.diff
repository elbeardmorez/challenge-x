From a241fc36a64f60c69ac96362029ea9d169f71c3c Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Tue, 18 Feb 2020 21:31:17 +0000
Subject: [add] hackerrank, 'sherlock and array', c++ port

---
 .../sherlock.and.array.cpp                    | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.cpp b/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.cpp
index c5f3438..3fb6066 100644
--- a/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.cpp
+++ b/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.cpp
@@ -8,8 +8,22 @@ vector<string> split(const string &);
 
 // Complete the balancedSums function below.
 string balancedSums(vector<int> arr) {
-
-
+    auto l_a = arr.size();
+    if (l_a < 1)
+        return "NO";
+    int lsum = 0;
+    auto rsum = accumulate(next(arr.begin()), arr.end(), 0, [](int a, int x) -> int {return a + x;});
+    if (lsum == rsum)
+        return "YES";
+    int idx = 0;
+    while (idx < l_a - 1) {
+        lsum += arr[idx];
+        idx++;
+        rsum -= arr[idx];
+        if (lsum == rsum)
+            return "YES";
+    }
+    return "NO";
 }
 
 int main()
@@ -88,4 +102,3 @@ vector<string> split(const string &str) {
 
     return tokens;
 }
-
-- 
2.25.0

