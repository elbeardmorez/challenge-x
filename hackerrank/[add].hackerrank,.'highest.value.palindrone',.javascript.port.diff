From a09918beffb39b92dae38571e5065180b1d27f80 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Thu, 9 May 2019 13:27:14 +0100
Subject: [add] hackerrank, 'highest value palindrone', javascript port

---
 .../highest.value.palindrome.js               | 74 ++++++++++++++++++-
 1 file changed, 72 insertions(+), 2 deletions(-)

diff --git a/hackerrank/algorithms.-.strings.-.medium.-.highest.value.palindrome/highest.value.palindrome.js b/hackerrank/algorithms.-.strings.-.medium.-.highest.value.palindrome/highest.value.palindrome.js
index d082980..d439905 100644
--- a/hackerrank/algorithms.-.strings.-.medium.-.highest.value.palindrome/highest.value.palindrome.js
+++ b/hackerrank/algorithms.-.strings.-.medium.-.highest.value.palindrome/highest.value.palindrome.js
@@ -26,8 +26,78 @@ function readLine() {
 
 // Complete the highestValuePalindrome function below.
 function highestValuePalindrome(s, n, k) {
-
-
+    var a_s1 = [];
+    var a_s2 = [];
+    var l_s = s.length;
+    var rem = -1;
+    var mid = 0;
+    if (l_s == 0)
+        return "-1";
+    else if (l_s == 1)
+        return k > 0 ? "9" : "-1";
+    else {
+        mid = parseInt(l_s / 2);
+        for (var l = 0; l < mid; l++) {
+            a_s1.push(parseInt(s[l]));
+            a_s2.push(parseInt(s[l_s - l - 1]));
+        }
+        if (l_s % 2 == 1)
+            rem = parseInt(s[mid]);
+    }
+    //console.log(`a_s1 len: ${a_s1.length}, a_s2 len: ${a_s2.length}`);
+    //console.log(`a_s1: ${a_s1}`);
+    //console.log(`a_s2: ${a_s2}`);
+    var m_mods = new Map();
+    var a_mods = [];
+    for (var idx = 0; idx < mid; idx++) {
+        //console.log(`idx: ${idx}, k: ${k}`);
+        if (a_s1[idx] != a_s2[idx]) {
+            var max_ = -1;
+            if (a_s1[idx] < a_s2[idx])
+                a_s1[idx] = max_ = a_s2[idx];
+            else
+                a_s2[idx] = max_ = a_s1[idx];
+            k -= 1;
+            m_mods.set(idx, max_);
+            a_mods.push(idx);
+        }
+        if (k < 0)
+            return "-1";
+    }
+    // here we have a palindrome!
+    if (k > 0) {
+        for (var idx = 0; idx < mid; idx++) {
+            //console.log(`idx: ${idx}, k: ${k}`);
+            if (a_s1[idx] < 9) {
+                if (k >= 2) {
+                    a_s1[idx] = a_s2[idx] = 9;
+                    k = m_mods.has(idx) ? k - 1 : k - 2;
+                } else if (k == 1) {
+                    for (var idx2 = 0; idx2 < a_mods.length; idx2++) {
+                        //console.log(`idx: ${idx}, idx2: ${idx2}`);
+                        if (idx2 >= idx && m_mods.get(idx2) < 9) {
+                            a_s1[idx2] = a_s2[idx2] = 9;
+                            k = 0;
+                            break;
+                        }
+                    }
+                }
+            }
+            if (k == 0)
+                break;
+        }
+    }
+    if (k > 0 && rem > -1 && rem < 9)
+        rem = 9;
+
+    var s1 = "";
+    var s2 = rem > -1 ? rem.toString() : "";
+    for (var l = 0; l < mid; l++) {
+        s1 += a_s1[l].toString();
+        s2 += a_s1[mid - l - 1].toString();
+    }
+
+    return s1 + s2;
 }
 
 function main() {
-- 
2.23.0

