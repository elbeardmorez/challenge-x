From 4fb7dea28e249444155bdd93e4d84970e5adfeea Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 23 Mar 2020 07:38:11 +0000
Subject: [add] hackerrank, 'luck balance', javascript port

---
 .../luck.balance.js                           | 24 ++++++++++++++++---
 1 file changed, 21 insertions(+), 3 deletions(-)

diff --git a/hackerrank/algorithms.-.greedy.-.easy.-.luck.balance/luck.balance.js b/hackerrank/algorithms.-.greedy.-.easy.-.luck.balance/luck.balance.js
index 669b1f5..54bb904 100644
--- a/hackerrank/algorithms.-.greedy.-.easy.-.luck.balance/luck.balance.js
+++ b/hackerrank/algorithms.-.greedy.-.easy.-.luck.balance/luck.balance.js
@@ -26,8 +26,27 @@ function readLine() {
 
 // Complete the luckBalance function below.
 function luckBalance(k, contests) {
-
-
+    let important = [];
+    let unimportant = [];
+    let l = undefined;
+    let t = undefined;
+    contests.forEach(contest => {
+        l = contest[0];
+        t = contest[1];
+        if (t === 1) {
+            important.push(l);
+        } else {
+            unimportant.push(l);
+        }
+    });
+    important.sort((l1, l2) => { return l1 == l2 ? 0 : (l1 < l2 ? -1 : 1 ); });
+    let l_important = important.length;
+    unimportant.sort((l1, l2) => { return l1 == l2 ? 0 : (l1 < l2 ? -1 : 1 ); });
+    let l_unimportant = important.length;
+
+    //console.log(`k: ${k}, important [${l_important}]: ${important}, unimportant[${l_unimportant}]: ${unimportant}`);
+    let sum = (arr) => { return arr.reduce((a, i) => { return a + i; }, 0); };
+    return -1 * sum(important.slice(0, Math.max(0, l_important - k))) + sum(important.slice(Math.max(0, l_important - k))) + sum(unimportant);
 }
 
 function main() {
@@ -51,4 +70,3 @@ function main() {
 
     ws.end();
 }
-
-- 
2.26.0

