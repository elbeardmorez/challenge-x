From 3ad2de44c2615ae522863dac6c2efeb78b92aa11 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sun, 12 Jan 2020 10:20:06 +0000
Subject: [add] hackerrank, 'find the median', javascript port

---
 .../find.the.median.js                        | 30 ++++++++++++++++++-
 1 file changed, 29 insertions(+), 1 deletion(-)

diff --git a/hackerrank/algorithms.-.sorting.-.easy.-.find.the.median/find.the.median.js b/hackerrank/algorithms.-.sorting.-.easy.-.find.the.median/find.the.median.js
index 520e5b0..15a7b7c 100644
--- a/hackerrank/algorithms.-.sorting.-.easy.-.find.the.median/find.the.median.js
+++ b/hackerrank/algorithms.-.sorting.-.easy.-.find.the.median/find.the.median.js
@@ -27,7 +27,35 @@ function readLine() {
 // Complete the findMedian function below.
 function findMedian(arr) {
 
-
+    /*
+    guaranteed range -10000 <= arr[i] <= 10000
+    */
+
+    let l_arr = arr.length;
+    let idx_target = parseInt((l_arr + 1) / 2);
+    //console.log(`target: ${idx_target}`);
+
+    // count sort
+    let l_arr2 = 20001;
+    let arr2 = Array(l_arr2).fill(0);
+    arr.forEach(x => {
+        arr2[x + 10000]++;
+    });
+    //console.log(`arr2: [${arr2}]`);
+    let count = 0;
+    let idx_count = 0;
+    for (let idx = 0; idx < l_arr2; idx++) {
+        idx_count = arr2[idx];
+        count += idx_count;
+        /*
+        if (idx_count > 0) {
+            console.log(`idx_target: ${idx_target} | idx: ${idx}, idx_count: ${idx_count}, count: ${count}`);
+        }
+        */
+        if (count >= idx_target)
+            return idx - 10000;
+    }
+    return -1;
 }
 
 function main() {
-- 
2.24.1

