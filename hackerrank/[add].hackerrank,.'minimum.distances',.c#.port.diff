From 9709c7aa1e4db0dae118698ce6e2cf54328348c2 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 11 Nov 2019 21:14:35 +0000
Subject: [add] hackerrank, 'minimum distances', c# port

---
 .../minimum.distances.cs                          | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/hackerrank/algorithms.-.implementation.-.easy.-.minimum.distances/minimum.distances.cs b/hackerrank/algorithms.-.implementation.-.easy.-.minimum.distances/minimum.distances.cs
index d01071a..a2782c6 100644
--- a/hackerrank/algorithms.-.implementation.-.easy.-.minimum.distances/minimum.distances.cs
+++ b/hackerrank/algorithms.-.implementation.-.easy.-.minimum.distances/minimum.distances.cs
@@ -12,12 +12,23 @@ using System.Text.RegularExpressions;
 using System.Text;
 using System;
 
+using static System.Console;
+
 class Solution {
 
     // Complete the minimumDistances function below.
     static int minimumDistances(int[] a) {
-
-
+        var l_a = a.Length;
+        var groups = Enumerable.Range(0, l_a).Zip(a, (i, v) => new int[2]{i, v}).GroupBy(x => x[1]).Where(g => g.Count() > 1).Select(g => g.Select(x => x[0]).ToArray()).ToArray();
+        var global_minimum = -1;
+        foreach (var g in groups) {
+            //WriteLine($"g: {String.Join(" ", g.Select(x => x.ToString()))}");
+            for (var l = 0; l < g.Length - 1; l++) {
+                if (global_minimum < 0 || g[l + 1] - g[l] < global_minimum)
+                    global_minimum = g[l + 1] - g[l];
+            }
+        }
+        return global_minimum;
     }
 
     static void Main(string[] args) {
-- 
2.23.0

