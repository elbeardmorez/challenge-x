From 3e8fdfcd8e0af221484981a45aa4672e59608d8b Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sun, 29 Mar 2020 10:12:12 +0100
Subject: [add] hackerrank, 'beautiful pairs', c# port

---
 .../beautiful.pairs.cs                        | 29 ++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.cs b/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.cs
index 47d7637..3f5e147 100644
--- a/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.cs
+++ b/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.cs
@@ -16,8 +16,36 @@ class Solution {
 
     // Complete the beautifulPairs function below.
     static int beautifulPairs(int[] A, int[] B) {
+        /*
+        A|                  3 5  7 11 5 8
+        B| 5 7 11 10 5 8 -> 5 7 11  3 5 8
+        beautiful pair indices -> (0,3),(1,0),(2,1),(3,2),(4,4),(5,5)
+        beautiful set is the maximal 6 pairs as no l[i] or r[i] is duplicated above
 
+        search for common pairs
+        return #common (+1 if #common isn't maximal as one can always modify an unmatched B[i] -> some unmatched A[i]
+                           else (common == n) - 1 if maximal, as 1 element in B MUST be changed as per the problem constraints)
+        thus return n - 1 if #common == n else #common + 1
+        */
 
+        var common = 0;
+        var n = A.Length;
+        A = new List<int>(A).OrderBy(x => x).ToArray();
+        B = new List<int>(B).OrderBy(x => x).ToArray();
+        var idx1 = 0;
+        var idx2 = 0;
+        while (idx1 < n && idx2 < n) {
+            if (A[idx1] == B[idx2]) {
+                common += 1;
+                idx1 += 1;
+                idx2 += 1;
+            } else if (A[idx1] < B[idx2]) {
+                idx1 += 1;
+            } else if (B[idx2] < A[idx1]) {
+                idx2 += 1;
+            }
+        }
+        return common == n ? n - 1 : common + 1;
     }
 
     static void Main(string[] args) {
@@ -38,4 +66,3 @@ class Solution {
         textWriter.Close();
     }
 }
-
-- 
2.26.0

