From 6309dd42c34d54a304c069d35a4fc78a6475e8e4 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Fri, 13 Mar 2020 07:57:58 +0000
Subject: [add] hackerrank, 'mark and toys', rust port

---
 .../mark.and.toys.rs                          | 51 ++++++++++++++++++-
 1 file changed, 50 insertions(+), 1 deletion(-)

diff --git a/hackerrank/algorithms.-.greedy.-.easy.-.mark.and.toys/mark.and.toys.rs b/hackerrank/algorithms.-.greedy.-.easy.-.mark.and.toys/mark.and.toys.rs
index 75b9783..44f1dc3 100644
--- a/hackerrank/algorithms.-.greedy.-.easy.-.mark.and.toys/mark.and.toys.rs
+++ b/hackerrank/algorithms.-.greedy.-.easy.-.mark.and.toys/mark.and.toys.rs
@@ -1,3 +1,52 @@
-// Enter your code here 
+// Enter your code here
 
+use std::io;
+use std::env;
+use std::fs::File;
+use std::io::Write;
 
+fn maximum_toys(prices: &mut Vec<i32>, k: i32) -> i32 {
+    let mut count: i32 = 0;
+    let mut cost: i32 = 0;
+    prices.sort();
+    for price in prices {
+        if cost + *price > k {
+            break;
+        }
+        count += 1;
+        cost += *price;
+    }
+    return count;
+}
+
+fn next_line(s: &mut String) {
+    s.clear();
+    let mut buf = String::new();
+    let res = io::stdin().read_line(&mut buf);
+    if res.is_ok() && res.unwrap() != 0 {
+        s.push_str(buf.trim_end_matches('\n'));
+    }
+}
+
+fn main() {
+    let key = "OUTPUT_PATH";
+    let mut target = String::new();
+    match env::var_os(key) {
+        Some(val) => target.push_str(val.to_str().unwrap()),
+        None => panic!("{} is not defined in the environment.", key),
+    }
+    let mut f = match File::create(target) {
+        Ok(f) => f,
+        Err(e) => panic!("file io error: {}", e),
+    };
+
+    let mut line = String::new();
+    next_line(&mut line);
+    let data = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();
+    let k = data[1];
+    next_line(&mut line);
+    let mut data = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();
+    let res = maximum_toys(&mut data, k);
+    f.write_all(res.to_string().as_bytes()).expect("file io error");
+    f.write_all(b"\n").expect("file io error");
+}
-- 
2.26.0

