From c5ff1064a63624739e4a563df67f61f94777bb41 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sun, 16 Feb 2020 23:12:42 +0000
Subject: [add] hackerrank, 'sherlock and array', rust port

---
 .../sherlock.and.array.rs                     | 61 ++++++++++++++++++-
 1 file changed, 60 insertions(+), 1 deletion(-)

diff --git a/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.rs b/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.rs
index 75b9783..035f590 100644
--- a/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.rs
+++ b/hackerrank/algorithms.-.search.-.easy.-.sherlock.and.array/sherlock.and.array.rs
@@ -1,3 +1,62 @@
-// Enter your code here 
+// Enter your code here
 
+use std::io;
+use std::env;
+use std::fs::File;
+use std::io::Write;
 
+fn balanced_sums(data: &Vec<i32>) -> &str {
+    let l_a: usize = data.len() as usize;
+    if l_a < 1 {
+        return "NO";
+    }
+    let mut lsum = 0;
+    let mut rsum = data[1..].into_iter().sum();
+    if lsum == rsum {
+        return "YES";
+    }
+    let mut idx: usize = 0;
+    while idx < l_a - 1 {
+      lsum += data[idx];
+      idx += 1;
+      rsum -= data[idx];
+      if lsum == rsum {
+          return "YES";
+      }
+    }
+    return "NO";
+}
+
+fn next_line(s: &mut String) {
+    s.clear();
+    let mut buf = String::new();
+    let res = io::stdin().read_line(&mut buf);
+    if res.is_ok() && res.unwrap() != 0 {
+        s.push_str(buf.trim_end_matches('\n'));
+    }
+}
+
+fn main() {
+    let key = "OUTPUT_PATH";
+    let mut target = String::new();
+    match env::var_os(key) {
+        Some(val) => target.push_str(val.to_str().unwrap()),
+        None => panic!("{} is not defined in the environment.", key),
+    }
+    let mut f = match File::create(target) {
+        Ok(f) => f,
+        Err(e) => panic!("file io error: {}", e),
+    };
+
+    let mut line = String::new();
+    next_line(&mut line);  // ignore n
+    next_line(&mut line);  // ignore size
+    while line.len() > 0 {
+        next_line(&mut line);
+        let data = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();
+        let res: &str = balanced_sums(&data);
+        f.write_all(res.to_string().as_bytes()).expect("file io error");
+        f.write_all(b"\n").expect("file io error");
+        next_line(&mut line);  // ignore size
+    }
+}
-- 
2.25.0

