From 77cec06c3dec2db55e202e56d2c16e7a8a59f55f Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 22 Apr 2019 13:46:07 +0100
Subject: [fix] hackerrank, 'permutations of strings', c solution

-sort tail after permuting
---
 .../permutations.of.strings.c                               | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/hackerrank/c.-.functions.-.medium.-.permutations.of.strings/permutations.of.strings.c b/hackerrank/c.-.functions.-.medium.-.permutations.of.strings/permutations.of.strings.c
index 0c38abe..82cdf8b 100644
--- a/hackerrank/c.-.functions.-.medium.-.permutations.of.strings/permutations.of.strings.c
+++ b/hackerrank/c.-.functions.-.medium.-.permutations.of.strings/permutations.of.strings.c
@@ -11,6 +11,10 @@ int merge_strings(char **s, int n, char *t) {
     return pos;
 }
 
+int compare_strings(const void* a, const void* b) {
+    return (char *)a > (char *)b ? 0 : 1;  // unbalanced, non-stable
+}
+
 int next_permutation(int n, char **s)
 {
     /**
@@ -41,6 +45,8 @@ int next_permutation(int n, char **s)
                 memcpy(guess_ + (l + 1), s + l, (el - l) * sizeof(char*));  // l+1-(el-1)
             if (n - (el + 1) > 0)
                 memcpy(guess_ + (el + 1), s + (el + 1), (n - (el + 1)) * sizeof(char*));  // (el+1)-n
+            // sort tail
+            qsort(guess_ + el, n - el, sizeof(char*), &compare_strings);
             merge_strings(guess_, n, guess);
             //printf("comparing last '%s' with '%s'\n", last, guess);
             if (strcmp(guess, last) > 0) {
-- 
2.23.0

