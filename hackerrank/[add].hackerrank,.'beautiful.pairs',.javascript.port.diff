From 9efe433c3f6978e6bd1b701ef057388e8443c9a9 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Thu, 26 Mar 2020 06:51:50 +0000
Subject: [add] hackerrank, 'beautiful pairs', javascript port

---
 .../beautiful.pairs.js                        | 33 +++++++++++++++++--
 1 file changed, 30 insertions(+), 3 deletions(-)

diff --git a/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.js b/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.js
index f1f673d..06fce3c 100644
--- a/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.js
+++ b/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.js
@@ -26,8 +26,36 @@ function readLine() {
 
 // Complete the beautifulPairs function below.
 function beautifulPairs(A, B) {
-
-
+    /*
+    A|                  3 5  7 11 5 8
+    B| 5 7 11 10 5 8 -> 5 7 11  3 5 8
+    beautiful pair indices -> (0,3),(1,0),(2,1),(3,2),(4,4),(5,5)
+    beautiful set is the maximal 6 pairs as no l[i] or r[i] is duplicated above
+
+    search for common pairs
+    return #common (+1 if #common isn't maximal as one can always modify an unmatched B[i] -> some unmatched A[i]
+                       else (common == n) - 1 if maximal, as 1 element in B MUST be changed as per the problem constraints)
+    thus return n - 1 if #common == n else #common + 1
+    */
+
+    let common = 0;
+    A.sort((l1, l2) => { return l1 === l2 ? 0 : (l1 > l2 ? 1 : -1); });
+    B.sort((l1, l2) => { return l1 === l2 ? 0 : (l1 > l2 ? 1 : -1); });
+    let n = A.length;
+    let idx1 = 0;
+    let idx2 = 0;
+    while (idx1 < n && idx2 < n) {
+        if (A[idx1] === B[idx2]) {
+            common += 1;
+            idx1 += 1;
+            idx2 += 1;
+        } else if (A[idx1] < B[idx2]) {
+            idx1 += 1;
+        } else if (B[idx2] < A[idx1]) {
+            idx2 += 1;
+        }
+    }
+    return common === n ? n - 1 : common + 1;
 }
 
 function main() {
@@ -45,4 +73,3 @@ function main() {
 
     ws.end();
 }
-
-- 
2.26.0

