From 31fcdb912e5e3b3b1a983bf0fb7cc4d04808f736 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Tue, 17 Sep 2019 08:02:30 +0100
Subject: [add] hackerrank, 'permuting two arrays', c++ port

---
 .../permuting.two.arrays.cpp                  | 21 +++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/hackerrank/algorithms.-.greedy.-.easy.-.permuting.two.arrays/permuting.two.arrays.cpp b/hackerrank/algorithms.-.greedy.-.easy.-.permuting.two.arrays/permuting.two.arrays.cpp
index 9084b58..c8bb6c5 100644
--- a/hackerrank/algorithms.-.greedy.-.easy.-.permuting.two.arrays/permuting.two.arrays.cpp
+++ b/hackerrank/algorithms.-.greedy.-.easy.-.permuting.two.arrays/permuting.two.arrays.cpp
@@ -6,8 +6,25 @@ vector<string> split_string(string);
 
 // Complete the twoArrays function below.
 string twoArrays(int k, vector<int> A, vector<int> B) {
-
-
+    /*
+    redux.. there are no constraints on permuting
+
+    order each array in alternate directions and sum, find any values under minimum
+    */
+
+    sort(A.begin(), A.end());
+    sort(B.begin(), B.end());
+    reverse(B.begin(), B.end());
+    //cout << "A*:"; for (auto itr = A.begin(); itr != A.end(); ++itr) cout << " " << *itr; cout << endl;
+    //cout << "B*:"; for (auto itr = B.begin(); itr != B.end(); ++itr) cout << " " << *itr; cout << endl;
+
+    auto l_a = A.size();
+    int lt = 0;
+    for (int l = 0; l < l_a; l++) {
+      if (A[l] + B[l] < k)
+        lt++;
+    }
+    return lt == 0 ? "YES" : "NO";
 }
 
 int main()
-- 
2.23.0

