From 0ff2bee028f34ef8333b74d5b204b579c5a2ed5d Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sun, 1 Mar 2020 23:25:28 +0000
Subject: [add] hackerrank, 'hackerland radio transmitters', c# port

---
 .../hackerland.radio.transmitters.cs          | 49 ++++++++++++++++++-
 1 file changed, 48 insertions(+), 1 deletion(-)

diff --git a/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.cs b/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.cs
index e25fcc5..9cc9bc6 100644
--- a/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.cs
+++ b/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.cs
@@ -11,13 +11,61 @@ using System.Runtime.Serialization;
 using System.Text.RegularExpressions;
 using System.Text;
 using System;
+using static System.Console;
 
 class Solution {
 
     // Complete the hackerlandRadioTransmitters function below.
     static int hackerlandRadioTransmitters(int[] x, int k) {
 
+        /*
+        x       x x                 x
+        ?       O c
 
+        account for non-contiguous ranges
+        */
+
+        var count = 0;
+        var left_house = -1;
+        var last_house = -1;
+        var last_antenna = -1;
+
+        foreach (var v in x.AsEnumerable().OrderBy(x_ => x_).Distinct()) {
+
+            //WriteLine($"house @: {v}, left_house @: {left_house}, last antenna @: {last_antenna}, range: {k}, count: {count}");
+            if (left_house == -1) {
+                // first house in next antenna range
+                left_house = v;
+            } else {
+                if (last_antenna == -1) {
+                    // we've gone out of range of the last antenna
+                    if (v - left_house > k) {
+                        //WriteLine($"setting transmitter on last house: {last_house}");
+                        last_antenna = last_house;
+                        count++;
+                    } else if (v - left_house == k) {
+                        //WriteLine($"setting transmitter on current house: {v}");
+                        last_antenna = v;
+                        count++;
+                   }
+                }
+                if ((last_antenna != -1)) {
+                    // antenna set, are we still in range?
+                    if (v - last_antenna > k) {
+                        left_house = v;
+                        last_antenna = -1;
+                    } else if (v - last_antenna == k) {
+                        // edge of antenna range
+                        left_house = -1;
+                        last_antenna = -1;
+                    }
+                }
+            }
+            last_house = v;
+        }
+        if (last_antenna == -1)
+            count++;
+        return count;
     }
 
     static void Main(string[] args) {
@@ -39,4 +87,3 @@ class Solution {
         textWriter.Close();
     }
 }
-
-- 
2.25.0

