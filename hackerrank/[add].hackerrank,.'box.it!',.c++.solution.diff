From dc730e2e19e74abf130e14da7c29e6ab2eb63512 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 18 Jun 2018 08:57:54 +0100
Subject: [add] hackerrank, 'box it!', c++ solution

---
 .../c++.-.classes.-.easy.-.box.it!/box.it.cpp | 70 ++++++++++++++++++-
 1 file changed, 67 insertions(+), 3 deletions(-)

diff --git a/hackerrank/c++.-.classes.-.easy.-.box.it!/box.it.cpp b/hackerrank/c++.-.classes.-.easy.-.box.it!/box.it.cpp
index 647648b..4650429 100644
--- a/hackerrank/c++.-.classes.-.easy.-.box.it!/box.it.cpp
+++ b/hackerrank/c++.-.classes.-.easy.-.box.it!/box.it.cpp
@@ -1,10 +1,10 @@
 
-//Implement the class Box  
+//Implement the class Box
 //l,b,h are integers representing the dimensions of the box
 
-// The class should have the following functions : 
+// The class should have the following functions :
 
-// Constructors: 
+// Constructors:
 // Box();
 // Box(int,int,int);
 // Box(Box);
@@ -20,6 +20,70 @@
 //Overload operator << as specified
 //ostream& operator<<(ostream& out, Box& B)
 
+class Box {
+    private:
+        int length;
+        int breadth;
+        int height;
+
+    public:
+        Box();
+        Box(int, int, int);
+        Box(Box*);
+
+        int getLength(); // Return box's length
+        int getBreadth (); // Return box's breadth
+        int getHeight ();  //Return box's height
+        long long CalculateVolume(); // Return the volume of the box
+
+        bool operator <(Box&);
+};
+
+
+ostream& operator <<(ostream&, Box&);
+
+// constructors
+Box::Box() {
+    this->length = 0;
+    this->breadth = 0;
+    this->height = 0;
+}
+Box::Box(int l, int b, int h) {
+    this->length = l;
+    this->breadth = b;
+    this->height = h;
+}
+Box::Box(Box *b) {
+    this->length = b->getLength();
+    this->breadth = b->getBreadth();
+    this->height = b->getHeight();
+}
+
+// Return box's length
+int Box::getLength() {
+    return this->length;
+}
+// Return box's breadth
+int Box::getBreadth () {
+    return this->breadth;
+}
+// Return box's height
+int Box::getHeight () {
+    return this->height;
+}
+// Return the volume of the box
+long long Box::CalculateVolume() {
+    return this->length * this->breadth * this->height;
+}
+
+bool Box::operator<(Box& b) {
+    return this->CalculateVolume() < b.CalculateVolume();
+}
+
+ostream& operator <<(ostream& out, Box& b) {
+    out << b.getLength() << " " << b.getBreadth() << " " << b.getHeight();
+    return out;
+}
 
 void check2()
 {
-- 
2.23.0

