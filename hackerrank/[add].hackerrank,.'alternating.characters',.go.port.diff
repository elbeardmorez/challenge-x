From 633ff54233c3d8057cad0e96fd27b9e0b3986420 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Tue, 31 Dec 2019 21:18:03 +0000
Subject: [add] hackerrank, 'alternating characters', go port

---
 .../alternating.characters.go                 | 67 +++++++++++++++++++
 1 file changed, 67 insertions(+)
 create mode 100644 hackerrank/algorithms.-.strings.-.easy.-.alternating.characters/alternating.characters.go

diff --git a/hackerrank/algorithms.-.strings.-.easy.-.alternating.characters/alternating.characters.go b/hackerrank/algorithms.-.strings.-.easy.-.alternating.characters/alternating.characters.go
new file mode 100644
index 0000000..09c478c
--- /dev/null
+++ b/hackerrank/algorithms.-.strings.-.easy.-.alternating.characters/alternating.characters.go
@@ -0,0 +1,67 @@
+package main
+
+import (
+    "bufio"
+    "fmt"
+    "io"
+    "os"
+    "strconv"
+    "strings"
+)
+
+// Complete the alternatingCharacters function below.
+func alternatingCharacters(s string) int32 {
+    repeated := int32(0)
+    chars := []rune(s)
+    last := ' '
+    for _, c:= range(chars) {
+        //fmt.Printf("comparing: %v with last: %v\n", c , last)
+        if c == last {
+            repeated += 1
+        } else {
+            last = c
+        }
+    }
+    return repeated
+}
+
+func main() {
+    reader := bufio.NewReaderSize(os.Stdin, 1024 * 1024)
+
+    stdout, err := os.Create(os.Getenv("OUTPUT_PATH"))
+    checkError(err)
+
+    defer stdout.Close()
+
+    writer := bufio.NewWriterSize(stdout, 1024 * 1024)
+
+    qTemp, err := strconv.ParseInt(readLine(reader), 10, 64)
+    checkError(err)
+    q := int32(qTemp)
+
+    for qItr := 0; qItr < int(q); qItr++ {
+        s := readLine(reader)
+
+        result := alternatingCharacters(s)
+
+        fmt.Fprintf(writer, "%d\n", result)
+    }
+
+    writer.Flush()
+}
+
+func readLine(reader *bufio.Reader) string {
+    str, _, err := reader.ReadLine()
+    if err == io.EOF {
+        return ""
+    }
+
+    return strings.TrimRight(string(str), "\r\n")
+}
+
+func checkError(err error) {
+    if err != nil {
+        panic(err)
+    }
+}
+
-- 
2.24.1

