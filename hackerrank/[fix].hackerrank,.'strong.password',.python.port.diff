From 35e0a64aea7e81ee6a41ae9b9d77f1b6ae201ba1 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Tue, 29 May 2018 22:27:06 +0100
Subject: [fix] hackerrank, 'strong password', python port

-use re.search to match substrings
---
 .../strong.password.py                                    | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.py b/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.py
index 0490ec0..aa05faf 100644
--- a/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.py
+++ b/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.py
@@ -14,13 +14,13 @@ def minimumNumber(n, p):
     # initially
     to_add = 0;
     # constraints
-    if not re.match("[0-9]", p):
+    if not re.search("[0-9]", p):
         to_add += 1;
-    if not re.match("[a-z]", p):
+    if not re.search("[a-z]", p):
         to_add += 1;
-    if not re.match("[A-Z]", p):
+    if not re.search("[A-Z]", p):
         to_add += 1;
-    if not re.match("[" + re.escape(special_characters) + "]", p):
+    if not re.search("[" + re.escape(special_characters) + "]", p):
         to_add += 1;
     if len(p) + to_add < 6:
         to_add += (6 - (len(p) + to_add));
-- 
2.23.0

