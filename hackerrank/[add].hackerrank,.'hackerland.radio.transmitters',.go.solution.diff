From 303d322fb1169d72e7a95f523a2e898e8fb0cc07 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Tue, 25 Feb 2020 19:02:29 +0000
Subject: [add] hackerrank, 'hackerland radio transmitters', go solution

---
 .../hackerland.radio.transmitters.go          | 24 ++++++++++++++++++-
 1 file changed, 23 insertions(+), 1 deletion(-)

diff --git a/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.go b/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.go
index c9e471e..681ceb1 100644
--- a/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.go
+++ b/hackerrank/algorithms.-.search.-.medium.-.hackerland.radio.transmitters/hackerland.radio.transmitters.go
@@ -7,11 +7,33 @@ import (
     "os"
     "strconv"
     "strings"
+    "sort"
 )
 
 // Complete the hackerlandRadioTransmitters function below.
 func hackerlandRadioTransmitters(x []int32, k int32) int32 {
-
+    sort.Slice(x, func(i1, i2 int) bool { return x[i1] < x[i2] })
+    count := int32(0)
+    last_antenna := x[0] - k
+    last_house := int32(0)
+    var attach int32
+    for _, v := range(x) {
+        //fmt.Printf("house @: %v, last antenna @: %v, range: %v\n", v, last_antenna, k)
+        attach = -1
+        if v > last_antenna + 2 * k {
+            //fmt.Printf("setting transmitter on last house: %v\n", last_house)
+            attach = last_house
+        } else if v == last_antenna + 2 * k {
+            //fmt.Printf("setting transmitter on current house: %v\n", v)
+            attach = v
+        }
+        if attach > -1 {
+            last_antenna = attach
+            count++
+        }
+        last_house = v
+    }
+    return count
 }
 
 func main() {
-- 
2.25.0

