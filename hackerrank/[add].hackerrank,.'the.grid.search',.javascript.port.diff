From 0e0a11d74cdb9fe6b8cb786131a84f116cc76c55 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 6 Jan 2020 18:00:16 +0000
Subject: [add] hackerrank, 'the grid search', javascript port

---
 .../the.grid.search.js                        | 40 ++++++++++++++++++-
 1 file changed, 38 insertions(+), 2 deletions(-)

diff --git a/hackerrank/algorithms.-.implementation.-.medium.-.the.grid.search/the.grid.search.js b/hackerrank/algorithms.-.implementation.-.medium.-.the.grid.search/the.grid.search.js
index d749244..9afff59 100644
--- a/hackerrank/algorithms.-.implementation.-.medium.-.the.grid.search/the.grid.search.js
+++ b/hackerrank/algorithms.-.implementation.-.medium.-.the.grid.search/the.grid.search.js
@@ -26,7 +26,44 @@ function readLine() {
 
 // Complete the gridSearch function below.
 function gridSearch(G, P) {
-
+    let fnMatch = (G, P, pt,  dim) => {
+        let cidx = pt[1];
+        let cidx2 = pt[1] + dim[1] - 1 + 1;
+        let l = 0;
+        while (l < dim[0]) {
+            //console.log(`testing P[${l}]: ${P[l]} vs G[${pt[0] + l}:${cidx}-${cidx2}]: ${G[pt[0] + l].substring(cidx, cidx2)}`);
+            if (G[pt[0] + l].substring(cidx, cidx2) !== P[l])
+                return false;
+            l++;
+        }
+        //console.log(`match at point: [${pt[0]}, ${pt[1]}]`);
+        return true;
+    };
+
+    let l_G = [G.length, G[0].length];
+    let l_P = [P.length, P[0].length];
+    //console.log(`dim G: [${l_G[0]}, ${l_G[1]}], dim P: [${l_P[0]}, ${l_P[1]}]`);
+    let s;
+    let cidx;
+    let pt = [];
+    let ridx = 0;
+    let ridx_max = l_G[0] - l_P[0] + 1;
+    while (ridx < ridx_max) {
+        s = G[ridx];
+        cidx = s.indexOf(P[0]);
+        pt[0] = ridx;
+        while (cidx !== -1) {
+            //console.log(`matched substring P[0]: '${P[0]}' at point: [${ridx},${cidx}]`);
+            pt[1] = cidx;
+            if (fnMatch(G, P, pt, l_P)) {
+                return "YES";
+            }
+            //console.log(`cidx: ${cidx}, searching s[${s}] substring: ${s.substring(cidx)}`);
+            cidx = s.indexOf(P[0], cidx + 1);
+        }
+        ridx++;
+    }
+    return "NO";
 }
 
 function main() {
@@ -68,4 +105,3 @@ function main() {
 
     ws.end();
 }
-
-- 
2.24.1

