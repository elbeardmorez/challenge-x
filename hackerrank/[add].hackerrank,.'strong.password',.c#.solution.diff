From 6f9f4491cc5216ddeb402fc479e578565badb84d Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Tue, 29 May 2018 21:38:52 +0100
Subject: [add] hackerrank, 'strong password', c# solution

---
 .../strong.password.cs                            | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.cs b/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.cs
index d1a38ef..e81b8c0 100644
--- a/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.cs
+++ b/hackerrank/algorithms.-.strings.-.easy.-.strong.password/strong.password.cs
@@ -17,6 +17,21 @@ class Solution {
     // Complete the minimumNumber function below.
     static int minimumNumber(int n, string password) {
         // Return the minimum number of characters to make the password strong
+        var special_characters = "!@#$%^&*()-+";
+
+        // min length 6 means..
+
+        // # as n >= 1
+
+        // initially
+        var toAdd = 0;
+        // constraints
+        if (!Regex.Match(password, @"[0-9]").Success) toAdd += 1;
+        if (!Regex.Match(password, @"[a-z]").Success) toAdd += 1;
+        if (!Regex.Match(password, @"[A-Z]").Success) toAdd += 1;
+        if (!Regex.Match(password, "[" + Regex.Escape(special_characters) + "]").Success) toAdd += 1;
+        if (password.Length < 6) toAdd += (6 - (toAdd + password.Length));
+        return toAdd;
     }
 
     static void Main(string[] args) {
-- 
2.23.0

