From e752ea1ac6e33a3cca0998d1ddacdc0d57b9a329 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 30 Mar 2020 20:32:01 +0100
Subject: [add] hackerrank, 'beautiful pairs', go port

---
 .../beautiful.pairs.go                        | 38 +++++++++++++++++--
 1 file changed, 35 insertions(+), 3 deletions(-)

diff --git a/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.go b/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.go
index 81075db..c641a33 100644
--- a/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.go
+++ b/hackerrank/algorithms.-.greedy.-.easy.-.beautiful.pairs/beautiful.pairs.go
@@ -7,12 +7,45 @@ import (
     "os"
     "strconv"
     "strings"
+    "sort"
 )
 
 // Complete the beautifulPairs function below.
 func beautifulPairs(A []int32, B []int32) int32 {
-
-
+    /*
+    A|                  3 5  7 11 5 8
+    B| 5 7 11 10 5 8 -> 5 7 11  3 5 8
+    beautiful pair indices -> (0,3),(1,0),(2,1),(3,2),(4,4),(5,5)
+    beautiful set is the maximal 6 pairs as no l[i] or r[i] is duplicated above
+
+    search for common pairs
+    return #common (+1 if #common isn't maximal as one can always modify an unmatched B[i] -> some unmatched A[i]
+                       else (common == n) - 1 if maximal, as 1 element in B MUST be changed as per the problem constraints)
+    thus return n - 1 if #common == n else #common + 1
+    */
+
+    var common = 0
+    var n = len(A)
+    sort.Slice(A, func(l1, l2 int) bool { return A[l1] < A[l2]; })
+    sort.Slice(B, func(l1, l2 int) bool { return B[l1] < B[l2]; })
+    var idx1 = 0
+    var idx2 = 0
+    for idx1 < n && idx2 < n {
+        if A[idx1] == B[idx2] {
+            common++
+            idx1++
+            idx2++
+        } else if A[idx1] < B[idx2] {
+            idx1++
+        } else if B[idx2] < A[idx1] {
+            idx2++
+        }
+    }
+    if common == n {
+        return int32(n - 1)
+    } else {
+        return int32(common + 1)
+    }
 }
 
 func main() {
@@ -72,4 +105,3 @@ func checkError(err error) {
         panic(err)
     }
 }
-
-- 
2.26.0

