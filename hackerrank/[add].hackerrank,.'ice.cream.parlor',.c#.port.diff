From 8056f58b53917f299774bd98a38a5a025c67838f Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Fri, 8 Nov 2019 06:51:54 +0000
Subject: [add] hackerrank, 'ice cream parlor', c# port

---
 .../ice.cream.parlor.cs                       | 48 ++++++++++++++++++-
 1 file changed, 46 insertions(+), 2 deletions(-)

diff --git a/hackerrank/algorithms.-.search.-.easy.-.ice.cream.parlor/ice.cream.parlor.cs b/hackerrank/algorithms.-.search.-.easy.-.ice.cream.parlor/ice.cream.parlor.cs
index f4f5191..c96c692 100644
--- a/hackerrank/algorithms.-.search.-.easy.-.ice.cream.parlor/ice.cream.parlor.cs
+++ b/hackerrank/algorithms.-.search.-.easy.-.ice.cream.parlor/ice.cream.parlor.cs
@@ -12,12 +12,56 @@ using System.Text.RegularExpressions;
 using System.Text;
 using System;
 
+using static System.Console;
+
 class Solution {
 
     // Complete the icecreamParlor function below.
     static int[] icecreamParlor(int m, int[] arr) {
-
-
+        //WriteLine($"arr: {String.Join(" ", arr.Select(x => x.ToString()))}, target: {m}");
+        var l_arr = arr.Length;
+        var costs = new Dictionary<int, List<int>>();
+        // map costs to indexes (flavours)
+        int l = 0;
+        while (l < l_arr) {
+            var cost = arr[l];
+            if (costs.ContainsKey(cost))
+                costs[cost].Add(l + 1);
+            else
+                costs[cost] = new List<int>(new int[]{l + 1});
+            l++;
+        }
+        arr = arr.OrderBy(x => x).ToArray();
+        int l1 = 0;
+        int l2 = 1;
+        while (arr[l1] + arr[l2] < m && l2 < l_arr - 1)
+            l2++;
+        while (l1 < l_arr - 1) {
+            if (arr[l1] + arr[l2] == m)
+                break;
+            while (arr[l1] + arr[l2] < m && l2 < l_arr - 1)
+                l2++;
+            if (arr[l1] + arr[l2] == m)
+                break;
+            while (arr[l1] + arr[l2] > m && l2 > l1 + 1)
+                l2--;
+            if (arr[l1] + arr[l2] == m)
+                break;
+            l1++;
+            if (l2 == l1)
+                l2++;
+        }
+        int[] res_costs = new int[]{arr[l1], arr[l2]};
+        //WriteLine($"res_costs: {res_costs}");
+        int[] res_flavours = new int[2];
+        res_flavours[0] = costs[res_costs[0]][0];
+        if (res_costs[1] == res_costs[0])
+            res_flavours[1] = costs[res_costs[1]][1];
+        else
+            res_flavours[1] = costs[res_costs[1]][0];
+        //WriteLine($"res_flavours: {res_flavours}");
+        res_flavours = res_flavours.OrderBy(x => x).ToArray();
+        return res_flavours;
     }
 
     static void Main(string[] args) {
-- 
2.23.0

