From 11baada90251aee95bde789cfa328f43e4250d5b Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 30 Jul 2018 16:35:33 +0100
Subject: [fix] hackerrank, 'detect floating point number', python solution

-swap char order to avoid regexp range syntax interpretation
---
 .../detect.floating.point.number.py                             | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/hackerrank/python.-.regex.and.parsing.-.easy.-.detect.floating.point.number/detect.floating.point.number.py b/hackerrank/python.-.regex.and.parsing.-.easy.-.detect.floating.point.number/detect.floating.point.number.py
index 5b51131..05fff19 100644
--- a/hackerrank/python.-.regex.and.parsing.-.easy.-.detect.floating.point.number/detect.floating.point.number.py
+++ b/hackerrank/python.-.regex.and.parsing.-.easy.-.detect.floating.point.number/detect.floating.point.number.py
@@ -2,7 +2,7 @@
 import re
 for _ in range(int(input())):
     s = input()
-    res = "True" if re.search(r'^[+-0-9]*?(?:[0-9]\.|\.[0-9])[0-9]*$', s) else "False"
+    res = "True" if re.search(r'^[-+0-9]*?(?:[0-9]\.|\.[0-9])[0-9]*$', s) else "False"
     try:
         pass # x = float(s)
     except:
-- 
2.23.0

