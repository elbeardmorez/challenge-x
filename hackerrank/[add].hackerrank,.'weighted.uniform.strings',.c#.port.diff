From 3b2209def807814d265ee50059210d59d3fcb1ce Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Fri, 13 Dec 2019 08:56:58 +0000
Subject: [add] hackerrank, 'weighted uniform strings', c# port

---
 .../weighted.uniform.strings.cs               | 25 ++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/hackerrank/algorithms.-.strings.-.easy.-.weighted.uniform.strings/weighted.uniform.strings.cs b/hackerrank/algorithms.-.strings.-.easy.-.weighted.uniform.strings/weighted.uniform.strings.cs
index 2ad04c7..de00dbf 100644
--- a/hackerrank/algorithms.-.strings.-.easy.-.weighted.uniform.strings/weighted.uniform.strings.cs
+++ b/hackerrank/algorithms.-.strings.-.easy.-.weighted.uniform.strings/weighted.uniform.strings.cs
@@ -12,12 +12,35 @@ using System.Text.RegularExpressions;
 using System.Text;
 using System;
 
+using static System.Console;
+
 class Solution {
 
     // Complete the weightedUniformStrings function below.
     static string[] weightedUniformStrings(string s, int[] queries) {
+        var tallies = new Dictionary<int, bool>();
+        var chars = s.ToCharArray();
+        var last = Convert.ToInt32(chars[0]) - 96;
+        //WriteLine($"last: {last}");
+        var count = 0;
+        int c_;
+        foreach (var c in chars) {
+            c_ = Convert.ToInt32(c) - 96;
+            //WriteLine($"considering: {c}|{c_}");
+            if (c_ == last)
+                count += c_;
+            else {
+                last = c_;
+                count = last;
+            }
+            tallies[count] = true;
+        }
 
-
+        //WriteLine($"tallies: {String.Join(' ', tallies.Keys.Select(k => '{' + k + ": " + tallies[k] + '}'))}");
+        var res = new List<string>();
+        foreach (var q in queries)
+            res.Add(tallies.ContainsKey(q) ? "Yes" : "No");
+        return res.ToArray();
     }
 
     static void Main(string[] args) {
-- 
2.23.0

